==12531== Memcheck, a memory error detector
==12531== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12531== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==12531== Command: ./push_swap 2 5 4 1 3
==12531== 
==12531== Invalid write of size 8
==12531==    at 0x109DB9: rotate (rotate.c:24)
==12531==    by 0x109DDB: do_ra (rotate.c:29)
==12531==    by 0x10A0F5: sort_five (sort.c:65)
==12531==    by 0x10988F: sort (main.c:38)
==12531==    by 0x109933: main (main.c:55)
==12531==  Address 0x10 is not stack'd, malloc'd or (recently) free'd
==12531== 
==12531== 
==12531== Process terminating with default action of signal 11 (SIGSEGV)
==12531==  Access not within mapped region at address 0x10
==12531==    at 0x109DB9: rotate (rotate.c:24)
==12531==    by 0x109DDB: do_ra (rotate.c:29)
==12531==    by 0x10A0F5: sort_five (sort.c:65)
==12531==    by 0x10988F: sort (main.c:38)
==12531==    by 0x109933: main (main.c:55)
==12531==  If you believe this happened as a result of a stack
==12531==  overflow in your program's main thread (unlikely but
==12531==  possible), you can try to increase the size of the
==12531==  main thread stack using the --main-stacksize= flag.
==12531==  The main thread stack size used in this run was 8388608.
==12531== 
==12531== HEAP SUMMARY:
==12531==     in use at exit: 160 bytes in 5 blocks
==12531==   total heap usage: 5 allocs, 0 frees, 160 bytes allocated
==12531== 
==12531== 32 bytes in 1 blocks are still reachable in loss record 1 of 2
==12531==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==12531==    by 0x10A1E8: stack_new (stack_func.c:19)
==12531==    by 0x109332: init_stack (init_stack.c:30)
==12531==    by 0x109910: main (main.c:53)
==12531== 
==12531== 128 bytes in 4 blocks are still reachable in loss record 2 of 2
==12531==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==12531==    by 0x10A1E8: stack_new (stack_func.c:19)
==12531==    by 0x109348: init_stack (init_stack.c:32)
==12531==    by 0x109910: main (main.c:53)
==12531== 
==12531== LEAK SUMMARY:
==12531==    definitely lost: 0 bytes in 0 blocks
==12531==    indirectly lost: 0 bytes in 0 blocks
==12531==      possibly lost: 0 bytes in 0 blocks
==12531==    still reachable: 160 bytes in 5 blocks
==12531==         suppressed: 0 bytes in 0 blocks
==12531== 
==12531== For lists of detected and suppressed errors, rerun with: -s
==12531== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Segmentation fault
